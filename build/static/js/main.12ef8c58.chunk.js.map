{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","type","text","ShowPeople","props","persons","map","p","key","name","person","deleteHandler","Person","onSubmit","event","preventDefault","number","Filter","value","onChange","changeHandler","AddContact","submitHandler","nameValue","nameHandler","numberValue","numberHandler","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterString","setFilterString","setMessage","displayMessage","duration","setTimeout","useEffect","personService","people","console","log","personsToShow","filter","toLowerCase","search","target","alreadyExists","length","replace","window","confirm","find","newPerson","catch","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PACMA,EAAU,eAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,GAEZ,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCjBvCM,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEnB,OAAgB,OAAZA,EACO,KAIP,yBAAKC,UAAWD,EAAQE,MACnBF,EAAQG,OAKfC,EAAa,SAACC,GAChB,OACI,6BACKA,EAAMC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQC,IAAKD,EAAEE,KAAMC,OAAQH,EAAGI,cAAeP,EAAMO,qBAKnFC,EAAS,SAAC,GAA6B,IAA5BF,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,cAOrB,OACI,6BACI,0BAAME,SAPQ,SAACC,GACnBA,EAAMC,iBACNJ,EAAcD,EAAOD,QAMZC,EAAOD,KADZ,IACmBC,EAAOM,OAD1B,IACkC,4BAAQf,KAAK,UAAb,aAMxCgB,EAAS,SAACb,GAEZ,OACI,6BACI,0BAAMS,SAAU,SAACC,GAAD,OAAWA,EAAMC,mBAAjC,sBACuB,2BAAOG,MAAOd,EAAMc,MAAOC,SAAUf,EAAMgB,mBAMxEC,EAAa,SAACjB,GAEhB,OACI,0BAAMS,SAAUT,EAAMkB,eAClB,sCACU,2BAAOJ,MAAOd,EAAMmB,UAAWJ,SAAUf,EAAMoB,eAF7D,WAIY,2BAAON,MAAOd,EAAMqB,YAAaN,SAAUf,EAAMsB,gBACzD,6BACI,4BAAQzB,KAAK,UAAb,UAoHD0B,EA9GH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPvB,EADO,KACEwB,EADF,OAEgBD,mBAAS,IAFzB,mBAEPE,EAFO,KAEEC,EAFF,OAGoBH,mBAAS,IAH7B,mBAGPI,EAHO,KAGIC,EAHJ,OAI0BL,mBAAS,IAJnC,mBAIPM,EAJO,KAIOC,EAJP,OAKgBP,mBAAS,IALzB,mBAKP7B,EALO,KAKEqC,EALF,KAORC,EAAiB,SAACpC,EAAMC,EAAMoC,GAChCF,EAAW,CAAClC,KAAMA,EAAMD,KAAMA,IAC1BsC,YAAW,WACPH,EAAW,QACZE,IAUXE,qBAPa,WACTC,IACCnD,MAAK,SAAAoD,GACFb,EAAWa,QAIH,IAsEhBC,QAAQC,IAAIvC,GACZ,IAAMwC,EAAgBxC,EAAQyC,QAAO,SAAAvC,GAAC,OAAiE,IAA7DA,EAAEE,KAAKsC,cAAcC,OAAOd,EAAaa,kBAEnF,OACI,6BACI,yCACA,kBAAC,EAAD,CAAchD,QAASA,IACvB,oCACA,kBAAC,EAAD,CAAQmB,MAAOgB,EAAcd,cAbf,SAACN,GACnBA,EAAMC,iBACNoB,EAAgBrB,EAAMmC,OAAO/B,UAYzB,uCACA,kBAAC,EAAD,CAAYK,UAAWO,EAASL,YAAaO,EAAWR,YAvBrC,SAACV,GACxBiB,EAAWjB,EAAMmC,OAAO/B,QAuBhBQ,cApBe,SAACZ,GACxBmB,EAAanB,EAAMmC,OAAO/B,QAmBiBI,cA/E7B,SAACR,GACfA,EAAMC,iBAEN,IAAMmC,EAAgB7C,EAAQyC,QAAO,SAAAvC,GAAC,OAAIA,EAAEE,OAASqB,KAASqB,OAAS,EACnEC,GAAU,EAMd,GAJIF,IACAE,EAAUC,OAAOC,QAAP,UAAkBxB,EAAlB,wEAGVsB,EAAS,CACT,IAAM1C,EAASL,EAAQkD,MAAK,SAAAhD,GAAC,OAAIA,EAAEE,OAASqB,KACtC0B,EAAS,eAAO9C,EAAP,CAAeM,OAAQgB,IACtCW,QAAQC,IAAIlC,GACZ+B,EAAqB/B,EAAOf,GAAI6D,GAC/BlE,MAAK,SAAAC,GACFsC,EAAWxB,EAAQC,KAAI,SAAAC,GAAC,OAAIA,EAAEZ,KAAOe,EAAOf,GAAKY,EAAIhB,SACtDkE,OAAM,SAAAC,GACLrB,EAAe,QAAD,UAAaP,EAAb,qCAAyD,KACvED,EAAWxB,EAAQyC,QAAO,SAAAvC,GAAC,OAAIA,EAAEE,OAASqB,SAE9Ca,QAAQC,IAAIvC,GAEZgC,EAAe,UAAD,UAAeP,EAAf,oBAA0C,KACxDC,EAAW,IACXE,EAAa,IAIjB,IAAIiB,EAAe,CACf,IAAMM,EAAY,CAAE/C,KAAMqB,EAASd,OAAQgB,GAC3CH,EAAWxB,EAAQsD,OAAOH,IAC1Bf,EAAqBe,GAErBnB,EAAe,UAAD,UAAeP,EAAf,4BAAkD,KAChEC,EAAW,IACXE,EAAa,QA4Cb,uCACA,kBAAC,EAAD,CAAY5B,QAASwC,EAAelC,cAtCvB,SAACF,GAElB,GADe4C,OAAOC,QAAP,iBAAyB7C,EAAzB,MACH,CACR,IAAMC,EAASL,EAAQyC,QAAO,SAAAvC,GAAC,OAAIA,EAAEE,OAASA,KAAM,GACpDkC,QAAQC,IAAIlC,GACZ+B,EAAqB/B,EAAOf,IAC5BkC,EAAWxB,EAAQyC,QAAO,SAAAvC,GAAC,OAAIA,EAAEE,OAASA,MAC1C4B,EAAe,UAAD,UAAe5B,EAAf,4BAA+C,WCrIzEmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.12ef8c58.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({message}) => {\n\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={message.type}>\n            {message.text}\n        </div>\n    )\n}\n\nconst ShowPeople = (props) => {\n    return (\n        <div>\n            {props.persons.map(p => <Person key={p.name} person={p} deleteHandler={props.deleteHandler}/>)}\n        </div> \n    )\n} \n\nconst Person = ({person, deleteHandler}) => {\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        deleteHandler(person.name)\n    }\n\n    return (\n        <div>\n            <form onSubmit={submitHandler}>\n                {person.name} {person.number} <button type=\"submit\">Delete</button>\n            </form>\n        </div>\n    )\n}\n\nconst Filter = (props) => {\n\n    return (\n        <div>\n            <form onSubmit={(event) => event.preventDefault()}>\n                Filter shown with: <input value={props.value} onChange={props.changeHandler} />\n            </form>\n        </div>\n    )\n}\n\nconst AddContact = (props) => {\n\n    return (\n        <form onSubmit={props.submitHandler}>\n            <div>\n                name: <input value={props.nameValue} onChange={props.nameHandler} />\n            </div>\n            number: <input value={props.numberValue} onChange={props.numberHandler} />\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filterString, setFilterString] = useState('')\n    const [message, setMessage] = useState({})\n\n    const displayMessage = (type, text, duration) => {\n        setMessage({text: text, type: type})\n            setTimeout(() => {\n                setMessage(null)\n            }, duration)\n    }\n\n    const hook = () => {\n        personService.getAll()\n        .then(people => {\n            setPersons(people)\n        })\n    }\n\n    useEffect(hook, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        const alreadyExists = persons.filter(p => p.name === newName).length > 0\n        let replace = false\n\n        if (alreadyExists) {\n            replace = window.confirm(`${newName} is already added to phonebook. Replace old number with a new one?`)\n        } \n        \n        if (replace) {\n            const person = persons.find(p => p.name === newName)\n            const newPerson = {...person, number: newNumber}\n            console.log(person)\n            personService.update(person.id, newPerson)\n            .then(response => {\n                setPersons(persons.map(p => p.id !== person.id ? p : response))\n            }).catch(error => {\n                displayMessage('error', `${newName} was already deleted from server.`, 5000)\n                setPersons(persons.filter(p => p.name !== newName))\n            })\n            console.log(persons)\n\n            displayMessage('success', `${newName} number updated.`, 5000)\n            setNewName('')\n            setNewNumber('')\n            \n        }\n\n        if(!alreadyExists) {\n            const newPerson = { name: newName, number: newNumber }\n            setPersons(persons.concat(newPerson))\n            personService.create(newPerson)\n\n            displayMessage('success', `${newName} added to the phonebook.`, 5000) \n            setNewName('')\n            setNewNumber('')\n                 \n        }\n\n\n    }\n\n    const deletePerson = (name) => {\n        const result = window.confirm(`Delete ${name}?`)\n        if (result) {\n            const person = persons.filter(p => p.name === name)[0]\n            console.log(person)\n            personService.remove(person.id)\n            setPersons(persons.filter(p => p.name !== name))\n            displayMessage('success', `${name} deleted from phonebook.`, 5000)\n            \n        }\n    }\n\n    const handlePersonChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const filterPersons = (event) => {\n        event.preventDefault()\n        setFilterString(event.target.value)\n    }\n\n    console.log(persons)\n    const personsToShow = persons.filter(p => p.name.toLowerCase().search(filterString.toLowerCase()) !== -1)\n\n    return (\n        <div>\n            <h1>Phonebook</h1>\n            <Notification message={message}/>\n            <h2>Find</h2>\n            <Filter value={filterString} changeHandler={filterPersons} />\n            <h2>Add New</h2>\n            <AddContact nameValue={newName} numberValue={newNumber} nameHandler={handlePersonChange}\n                numberHandler={handleNumberChange} submitHandler={addPerson} />\n            <h2>Numbers</h2>\n            <ShowPeople persons={personsToShow} deleteHandler={deletePerson}/>\n        </div>\n    )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}